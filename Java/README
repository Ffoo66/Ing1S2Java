# Projet Java – Gestion intelligente du tri sélectif

## Table des matières

- [À propos du projet](#à-propos-du-projet)
- [Architecture et conception des classes](#architecture-et-conception-des-classes)
- [Fonctionnalités principales](#fonctionnalités-principales)
- [Organisation et stockage des données](#organisation-et-stockage-des-données)
- [Arborescence des packages](#arborescence-des-packages)
- [Technologies utilisées](#technologies-utilisées)
- [Prise en main](#prise-en-main)
  - [Prérequis](#prérequis)
  - [Installation](#installation)
- [Utilisation](#utilisation)
  - [Classes de test](#classes-de-test)
  - [Exécution de MainTest](#exécution-de-maintest)
- [Membres du groupe](#membres-du-groupe)
- [Chronologie du projet](#chronologie-du-projet)

## À propos du projet

Ce projet Java a pour objectif de simuler un système intelligent de tri sélectif en modélisant un centre de tri, des ménages, des commerces partenaires et des bacs de tri.  
Les ménages reçoivent des points de fidélité en déposant correctement leurs déchets, points qu’ils peuvent ensuite échanger contre des bons de réduction dans les commerces partenaires.

## Architecture et conception des classes

Le projet repose sur une modélisation orientée objet avec les classes suivantes :

- `CentreTri` : gestion des bacs, dépôts, statistiques, notifications
- `Bac` : unité de tri selon la couleur et le type de déchet
- `Depot` : dépôt de déchets par un ménage avec calcul de points
- `Menage` : utilisateur pouvant gagner des points et obtenir des bons
- `BonReduction` : bon généré à partir des points
- `Commerce` : commerce partenaire lié à un centre de tri
- `ContratPartenariat` : contrat temporaire entre un commerce et un centre
- `Adresse` : localisation d’un bac, commerce ou ménage
- `Couleur`, `Type`, `ResCat` : énumérations métiers

## Fonctionnalités principales

- Attribution de points selon la correspondance entre type de déchet et couleur du bac
- Génération de notification quand un bac est plein
- Vidage des bacs par le centre
- Échange de points contre bons de réduction
- Contrats temporaires entre commerce et centre de tri
- Génération de statistiques via des filtres multiples

## Organisation et stockage des données

- `HashMap` pour stocker et retrouver efficacement les entités
- Identifiants uniques (`UUID`) pour les bacs, dépôts, bons, etc.
- Données centralisées dans les maps statiques (comme `Menage.getMapMenage()`)

## Arborescence des packages

